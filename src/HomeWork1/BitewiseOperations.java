package HomeWork1;

public class BitewiseOperations {
    public static void main(String[] args) {
        int a = 42;     //101010
        int b = 15;     //1111
        int c;

        a = ~a;         //00000000_00000000_00000000_00101010 -> 11111111_11111111_11111111_11010101
        b = ~b;         //00000000_00000000_00000000_00001111 -> 11111111_11111111_11111111_11110000

        a = 42;
        b = 15;

        c = a & b;
        a &= b;
        /*
        1 если оба 1
         00101010
         00001111
         --------
         00001010 = 10
        * */

        a = 42;

        c = a | b;
        a |= b;
        /*
        1 если есть 1 в одном из операндов
        00101010
        00001111
        --------
        00101111 = 47
        * */

        a = 42;

        c = a ^ b;
        a ^= b;
        /*
        1 если только один операнд имеет 1
        00101010
        00001111
        --------
        00100101 = 37
        * */

        a = 42;

        c = a >> b;
        a >>= b;
        /*
        сдвиг вправо. выдвинутые биты теряются. знак сохраняется
        00000000_00000000_00000000_00101010 -> 00000000_00000000_00000000_00000000
        * */

        a = 42;

        c = a >>> b;
        a >>>= b;
        /*
        сдвиг вправо. выдвинутые биты теряются. знак НЕ сохраняется
        00000000_00000000_00000000_00101010 -> 00000000_00000000_00000000_00000000
        * */
        c = a << b;
        a <<= b;
        /*
        сдвиг влево. выдвинутые биты теряются. знак сохраняется
        00000000_00000000_00000000_00101010 -> 00000000_00010101_00000000_00000000 = 1376256
        * */

        a = -42;        //11111111_11111111_11111111_11010110
        b = -15;        //11111111_11111111_11111111_11110001

        a = ~a;         //11111111_11111111_11111111_11010110 -> 00000000_00000000_00000000_00101001
        b = ~b;         //11111111_11111111_11111111_11110001 -> 00000000_00000000_00000000_00001110

        a = -42;
        b = -15;

        c = a & b;
        a &= b;
        /*
        1 если оба 1
         11111111_11111111_11111111_11010110
         11111111_11111111_11111111_11110001
         -----------------------------------
         11111111_11111111_11111111_11010000 = 4294967248
        * */

        a = -42;

        c = a| b;
        a |= b;
        /*
        1 если есть 1 в одном из операндов
        11111111_11111111_11111111_11010110
        11111111_11111111_11111111_11110001
        -----------------------------------
        11111111_11111111_11111111_11110111 = 4294967287
        * */

        a = -42;

        c = a ^ b;
        a ^= b;
        /*
        1 если только один операнд имеет 1
        11111111_11111111_11111111_11010110
        11111111_11111111_11111111_11110001
        -----------------------------------
        00000000_00000000_00000000_00100111 = 39
        * */

        a = -42;

        c = a >> b;
        a >>= b;
        /*
        сдвиг вправо. выдвинутые биты теряются. знак сохраняется
        11111111_11111111_11111111_11010110 -> 11111111_11111111_11111111_11111111 = 4294967295
        * */

        a = -42;

        c = a >>> b;
        a >>>= b;
        /*
        сдвиг вправо. выдвинутые биты теряются. знак НЕ сохраняется
        11111111_11111111_11111111_11010110 -> 00000000_00000000_01111111_11111111 = 32767
        * */

        c = a << b;
        a <<= b;
        /*
        сдвиг влево. выдвинутые биты теряются. знак сохраняется
        11111111_11111111_11111111_11010110 -> 11111111_10101100_00000000_00000000 = 4289462272
        * */
    }
}
